{"version":3,"sources":["components/Todos.js","components/TodoForm.js","App.js","index.js"],"names":["Todos","todo","todosArr","setTodosArr","className","completed","onClick","map","item","id","icon","faCircle","size","type","disabled","value","text","filter","faTimes","TodoForm","select","setSelect","filteredTodos","countTodos","isCompleted","console","log","App","useState","todos","setTodos","setFilteredTodos","setCountTodos","setIsCompleted","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","checkCompleted","filterHandler","ItemLeft","found","find","count","inCompletedTodos","length","faAngleDown","onSubmit","e","preventDefault","data","Math","random","toFixed","prev","placeholder","required","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.658f0b1c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { faCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Todos = ({todo, todosArr, setTodosArr}) => {\r\n  const deleteTodo = () => {\r\n    setTodosArr(todosArr.filter(item => item.id !== todo.id))\r\n  }\r\n\r\n  const clearTodo = () => {\r\n    setTodosArr(todosArr.map((item) => {\r\n      if(item.id === todo.id) {\r\n        return {\r\n          ...item,\r\n          completed: !item.completed,\r\n        };\r\n      }\r\n      return item;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <section className=\"todo-list\">\r\n      <div className=\"todo-clear\">\r\n          <button className={(todo.completed ? 'clearBtn' : 'nonClear')} onClick={clearTodo}>\r\n            <FontAwesomeIcon icon={faCircle} size=\"2x\" />\r\n          </button>\r\n        <input className={'todo-input '+(todo.completed ? 'completed' : 'inCompleted')} type=\"text\" disabled={true} value={todo.text} />\r\n      </div>\r\n      <button className={\"deleteBtn\"} onClick={deleteTodo}>\r\n        <FontAwesomeIcon icon={faTimes} size=\"2x\" />\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\nimport Todos from './Todos';\r\n\r\nconst TodoForm = ({ todosArr, setTodosArr, select, setSelect, filteredTodos, countTodos, isCompleted }) => {\r\n  \r\n  const onClick = (value) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setTodosArr(todosArr.filter(item => item.completed === false))\r\n    console.log('123');\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {filteredTodos.map((todo) => (\r\n        <Todos\r\n          key={todo.id}\r\n          todo={todo}\r\n          todosArr={todosArr}\r\n          setTodosArr={setTodosArr}\r\n        />\r\n      ))}\r\n      <div className=\"todoOptions\">\r\n        <span className=\"leftTodos\">{countTodos} left items</span>\r\n        <div className=\"todosStatus\">\r\n          <button className={select==='All' ? \"selected\" : ''} onClick={() => onClick('All')}>All</button>\r\n          <button className={select==='Active' ? \"selected\" : ''} onClick={() => onClick('Active')}>Active</button>\r\n          <button className={select==='Completed' ? \"selected\" : ''} onClick={() => onClick('Completed')}>Completed</button>\r\n        </div>\r\n        <button onClick={clearCompleted} className={\"clearCompleted \"+(isCompleted ? \"visible\" : '')}>Clear Completed Todos</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useEffect, useState } from 'react';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TodoForm from './components/TodoForm';\n\nfunction App() {\n  const [todos, setTodos] = useState('');\n  const [todosArr, setTodosArr] = useState([]);\n  const [select, setSelect] = useState('All');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [countTodos, setCountTodos] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  /* save local */\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodosArr(todoLocal);\n    }\n  };\n\n  const setLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todosArr));\n  };\n\n  /* useEffect */\n  useEffect(() => {\n    getLocalTodos();\n    console.log('getlocal');\n  }, []);\n\n  useEffect(() => {\n    setLocalTodos();\n    checkCompleted();\n    setTodos('');\n  }, [todosArr]);\n\n  useEffect(() => {\n    filterHandler();\n    ItemLeft();\n  },[select,todosArr])\n\n  /* Functions */\n  const checkCompleted = () => {\n    const found = todosArr.find(item => item.completed);\n    found ? setIsCompleted(true) : setIsCompleted(false);\n  }\n  const ItemLeft = () => {\n    let count = 0;\n    todosArr.map((item) => {\n      if(!item.completed) count++;\n    });\n    setCountTodos(count);\n  }\n\n  const onTodoChange = (e) => {\n    setTodos(e.target.value);\n  };\n\n  const clearAll = () => {\n    const inCompletedTodos = todosArr.filter(\n      (item) => item.completed === false\n    );\n    console.log(inCompletedTodos);\n\n    inCompletedTodos.length > 0\n      ? setTodosArr(\n          todosArr.map((item) => {\n            if (item.completed === false) {\n              return {\n                ...item,\n                completed: true,\n              };\n            }\n            return item;\n          })\n        )\n      : setTodosArr(\n          todosArr.map((item) => {\n            return {\n              ...item,\n              completed: false,\n            };\n          })\n        );\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      id: (Math.random() * (0.12 - 0.02) + 0.02).toFixed(4),\n      text: todos,\n      completed: false,\n    };\n    setTodosArr((prev) => [...prev, data]);\n  };\n\n  const filterHandler = () => {\n    switch(select) {\n      case 'Active':\n        setFilteredTodos(todosArr.filter(item => item.completed === false))\n        break;\n      case 'Completed':\n        setFilteredTodos(todosArr.filter(item => item.completed === true))\n        break;\n      default:\n        setFilteredTodos(todosArr);\n    }\n  }\n\n  return (\n    <div className=\"todos_container\">\n      <h1>todos</h1>\n      <div className=\"todoForm\">\n        <span className=\"clearAllBtn\" onClick={clearAll}>\n          <FontAwesomeIcon icon={faAngleDown} size=\"2x\" />\n        </span>\n        <form onSubmit={onSubmit} className=\"todos_container\">\n          <input\n            className=\"todo--input\"\n            placeholder=\"What needs to be done?\"\n            required\n            value={todos}\n            onChange={onTodoChange}\n          />\n        </form>\n      </div>\n      <TodoForm\n      todosArr={todosArr}\n      filteredTodos={filteredTodos} \n      setTodosArr={setTodosArr} \n      select={select}\n      setSelect={setSelect}\n      countTodos={countTodos}\n      isCompleted={isCompleted}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}